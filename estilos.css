html {
      box-sizing: border-box;
      font-size: 16px;
      font-family: sans-serif;
      scroll-behavior: smooth;
    }

    *,
    *::after,
    *::before {
      box-sizing: inherit;
    }

    a[href="#top"] {
      margin: 1rem;
      display: block;
      font-size: 2rem;
      text-align: center;
      text-decoration: none;
    }

    p {
      margin: 0;
    }

    h2 {
      margin-top: 50vh;
      text-align: center;
    }

    img {
      margin: auto;
      display: block;
      max-width: 100%;
      height: auto;
    }

    .menu {
      margin-bottom: 100vh;
      font-size: 125%;
    }

    .menu li {
      margin-bottom: 1rem;
    }

    .container {
      margin: 0 auto;
      width: 80%;
      height: 80vh;
      background-color: #222;
      border: medium solid #000;
    }

    .item {
      
      font-size: 1.25rem;
      background-color: #666;
      border: medium solid #999;
    }

    .sub-item {
      padding: 1rem;
      background-color: #ddd;
      border: medium solid #ccc;
    }

/*GRID EXPLICITA*/
.grid-explicit{
  display: grid;
  /*  3f 3c */
  grid-template-columns: 100px 10rem 30%; /*las otras columnas si en caso faltara se rellenan con el sobrante*/
  grid-template-rows: 200px 10rem 100px; 

  /*  4f 5c */
  grid-template-columns: repeat(5,auto);
  grid-template-rows: repeat(4,100px);
  
  /*  5f 4c */
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: repeat(5,1fr);

  /*para el espacio entre items*/
  row-gap:2rem;
  column-gap:2rem;
  gap:0 0;

}

/*AQUI POSICIONAMOS EL TAMAÑO DE LOS HIJOS DE LA GRID RESPECTO A LAS LINEAS DEL CONTENEDOR**/
.grid-explicit .item:nth-child(10){
  color: cyan;
  grid-row-start: 2; /*hacemos que este item inicie desde la grid line pero en la fila 2*/
  grid-row-end: 4; /*hacemos que este item termine en la grid line de la fila 4*/
  grid-column-start: 2; /*hacemos que la columna de este item inicie en la grid line pero de columna en 2*/
  grid-column-end: 3; /*hacemos que la columna de este item inicie en la grid line pero de columna en 3*/

  grid-row: 2/3; /*estos son sus shorthands*/
  grid-column: 3/5;

  /*rowstart/rowend/columnstart/columnend**/
  grid-area: 2/3/3/5;  /*shorthand para ambas propiedades tanto del row como el column*/

}
/*span lo referiamos que desde donde el item se encuentra se desplazara hasta el valor que nosotros coloquemos*/
.grid-explicit .item:nth-child(12){
  color: purple;
  grid-column: span 2;
  grid-row: span 2;
}

.grid-explicit .item:nth-child(1){
  color: purple;
  grid-row: 2/span 3; /*con esto indicamos que iniciara en la grid track row y avanzara las posiciones que pongamos 
  luego del span porque desde ahi contara*/
}

/*GRID EXPLICITA*/


/*GRID CON NOMBRES DE LINEA*/

.grid-line-names{
  display: grid;
  grid-template-rows: repeat(3,1fr);
  grid-template-columns: repeat(3,1fr);

  grid-template-rows: [linea-fila-1] 1fr [linea-fila-2] 1fr [linea-fila-3] 1fr [linea-fila-4];
  grid-template-columns: [linea-columna-1] 1fr [linea-columna-2] 1fr [linea-columna-3] 1fr [linea-columna-4];
*/
}

.grid-line-names .item:nth-child(2){
  color: cyan;
  grid-row-start: linea-fila-1;
  grid-column: linea-columna-1/linea-columna-4;

  /**SI QUISIERAMOS USAR ESTOS MISMOS NOMBRES DE LINEA PARA GRID AREA NO FUNCIONA*/
}

/*GRID CON NOMBRES DE LINEA*/


/*GRID CON AREAS*/

.grid-areas{
  display: grid;
  /*grid con 2columnas y 4filas*/  
  grid-template-columns: 1fr 150px;
  grid-template-rows: 100px repeat(2,1fr) 60px;

  grid-template-areas: 
    "header header" 
    "content sidebar"
    "content ."
    "footer footer";
}

.header{
  grid-area: header; /*aqui debe ir el nombre de la clase*/
}
.content{
  grid-area: content;
}
.sidebar{
  grid-area: sidebar;
}
.footer{
  grid-area: footer;
}


/*GRID CON AREAS*/


/*GRID IMPLICITA**/

.grid-implicit{
  /*4 columnas 3 filas*/
/* display: inline-grid;*/
  display: grid;  
  display: inline-grid;
  width: 40%;
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: repeat(3,150px);
}

/*GRID IMPLICITA**/


/*GRID FLOW - FLUJO DE LA GRID*/
.grid-flow{
  /*5 columnas 3 filas*/
  display: grid;
  grid-template-columns: repeat(5,1fr);
  grid-template-rows: repeat(3,100px);

  grid-auto-flow: row;
  grid-auto-rows: 150px; /*el tamaño por defecto que tomaran los elementos que no entren en la grid explicita 5x3*/
  grid-auto-flow: column;/*cambiamos el flujo de la grid a columnas*/
  grid-auto-columns: 200px;

}
/*GRID FLOW - FLUJO DE LA GRID*/


/*GRID FLOW DENSE - FLUJO DENSO DE LA GRID*/

.grid-flow-dense{
  /*5 columnas 3 filas*/
  display: grid;

  grid-template-columns: repeat(5,1fr);
  grid-template-rows: repeat(3,150px);

  grid-auto-flow: row dense; /*cuando se maneja en fila
  con esto logramos que los espacios que quedaban en blanco se rellenen de los items que aun teniamos*/

  grid-auto-flow: column dense; /*hacemos que se rellenen los hijos que queden pero en las columnas*/
  
}

.grid-flow-dense .item:nth-child(9){
  color: cyan;
  grid-row: span 3;
  grid-column: span 3;
}

.grid-flow-dense .item:nth-child(11){
  color: cyan;
  grid-row: span 3; /*mismo ejemplo pero con columnas*/
}


/*GRID FLOW DENSE - FLUJO DENSO DE LA GRID*/



/*GRID LAYER - SUPERPOSICION CAPAS DE GRID*/
  
.grid-layers {
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: repeat(4,1fr);

}
/*
    ESTA SUPERPOSICION ESTARA DETERMINADA POR LA CASCADA QUE NOSOTROS COLOQUEMOS EN LOS DIVS EN HTML
    COMO EL HIJO 5 ESTA MAS ABAJO POR ESO ESTA ENCIMA DE LOS DEMAS    
 */
.grid-layers .item:nth-child(1){
  background: yellow;
  grid-row: 1 / 3;
  grid-column: 1 / 3;
}

.grid-layers .item:nth-child(2){
  background: lightblue;
  grid-row: 1 / 3;
  grid-column: 3 / 5;

}
.grid-layers .item:nth-child(3){
  background: lightgreen;
  grid-row: 3/5;
  grid-column: 1/3;
}

/*.grid-layers .item:nth-child(4){*/
.grid-layers .cuatro{
  background: brown;
  grid-row: 3/5;
  grid-column: 3/5;  
}

/*.grid-layers .item:nth-child(5){*/
.grid-layers .cinco{
  background: black;
  color:white;
  grid-row: 2 / 4;
  grid-column: 2/4;
} 
/*GRID LAYER - SUPERPOSICION CAPAS DE GRID*/


/*GRID ORDER - ORDENAMIENTO DE HIJOS*/
.grid-order{
  /*  2 filas x 3 columnas   */
  display: grid;
  grid-template-columns: repeat(3,1fr);
  grid-template-rows: repeat(2,1fr);
}

.grid-order .item:nth-child(5){
  /*el valor por defecto es 0 */
  order: -1;
}

.grid-order .item:nth-child(2){
  order: 1;
}

/*GRID ORDER - ORDENAMIENTO DE HIJOS*/



/*GRID-ALIGN - ALINEACION DE HIJOS*/
.grid-align{
  /*  3 columnas x 2 filas   */
  display: grid;
  grid-template-columns: repeat(3,200px);
  grid-template-rows: repeat(2,200px);

  /*PARA ALINEAR LOS HIJOS EN EL EJE HORIZONTAL X **/
  justify-items:stretch; /*valor por defecto*/
  justify-items:start;
  justify-items:end;
  justify-items:center;

  /*PARA ALINEAR LOS HIJOS EN EL EJE VERTICAL Y **/
  align-items: stretch; /*valor por defecto*/
  align-items: start;
  align-items: end;
  align-items: center;

}

.grid-align .item:nth-child(4){
  color: cyan;
  /*´para alinear un elemento a si mismo*/
  justify-self:start; /*ejeX*/
  align-self: start; /*ejeY*/
}

/*GRID-ALIGN - ALINEACION DE HIJOS*/


/*GRID-ALIGN TRACKS- ALINEACION DE FILAS DEL CONTENEDOR*/
.grid-align-tracks {
  /*  3 columnas 2 filas */
  display: grid;
  grid-template-columns: repeat(3,200px);
  grid-template-rows: repeat(2,200px);
  /*
   ALINEA TODO EL CONTENIDO 
   */
  /*para alinear el contenido en el eje horizontal X  */
  justify-content: start; /*default*/
  justify-content: end;
  justify-content: center;
  justify-content: space-between;
  justify-content: space-around;
  justify-content: space-evenly;
  /*para alinear el contenido en el eje vertical Y  */
  align-content: start; /*default*/
  align-content: end;
  align-content: center;
  align-content: space-between;
  align-content: space-around;
  align-content: space-evenly;
}
/*GRID-ALIGN TRACKS- ALINEACION DE FILAS DEL CONTENEDOR*/


/*GRID MIN MAS - TAMAÑO MINIMO Y MAXIMO DEL CONTENIDO DE LAS COLUMNAS O PODRIAN SER FILAS */
.grid-min-max{
  display: grid;
  /*  4columnas y ?filas porque no las definiremos */
  grid-template-columns: repeat(4,1fr);
  /* minmax(<tamaño minimo> , <tamaño maximo>)  */
  grid-template-columns: repeat(4,minmax(100px,200px));
  grid-template-columns: repeat(4,minmax(min-content,150px));
  /*grid-template-columns: repeat(4,minmax(30px,max-content));
  grid-template-columns: repeat(4,minmax(min-content,max-content));*/
}


/*GRID MIN MAX - TAMAÑO MINIMO Y MAXIMO DEL CONTENIDO DE LAS COLUMNAS O PODRIAN SER FILAS */




/*GRID REPEAT - COMO REPETIR EL MISMO PATRON SEGUN LA LOGICA DEL GRID NOS VAYA ACOMODANDO NUEVOS ITEMS DEBAJO CUANDO SEA FILA Y A LA DERECHA SI ES COLUMNA**/

.grid-repeat{
  display: grid;
  grid-template-columns: repeat(4,1fr);
  grid-template-columns: repeat(4,10% 20% 30% 40%); /*esto repetira 4 veces la misma serie*/
  grid-template-columns: repeat(1,10% 20% 30% 40%);
  grid-template-rows: repeat(2,50px 100px); /*con esto solo repetira las 4 primeras filas estos tamaños que pusismos*/
  /*para que se repita cuando aumente mas contenido por debajo utilizamos*/
  grid-auto-rows: 50px 100px;
}

/*GRID REPEAT - COMO REPETIR EL MISMO PATRON SEGUN LA LOGICA DEL GRID NOS VAYA ACOMODANDO NUEVOS ITEMS DEBAJO CUANDO SEA FILA Y A LA DERECHA SI ES COLUMNA**/

/*GRID DYNAMICS - AUTOFILL Y AUTOFIT PARA AJUSTAR EL CONTENIDO QUE TENGAMOS EN LA GRID */
.grid-dynamics{
  display: grid;
  grid-template-columns: repeat(4,100px);
  /*auto-fill Rellega la grid con tracks generados automaticamente*/
  grid-template-columns: repeat(auto-fill,100px);
  grid-template-columns: repeat(auto-fill,minmax(150px,1fr));
  /*grid-template-columns: repeat(auto-fill,minmax(150px,200px));*/
  /*auto-fit Ajusta la grid con tracks existentes*/
  grid-template-columns: repeat(auto-fit,100px);
  grid-template-columns: repeat(auto-fit,minmax(100px,1fr));
}

/*GRID DYNAMICS - AUTOFILL Y AUTOFIT PARA AJUSTAR EL CONTENIDO QUE TENGAMOS EN LA GRID */

/*GRID RESPONSIVE - CON AUTOFIT*/
.grid-responsive{
  display: grid;
  grid-template-columns: repeat(auto-fit,minmax(200px,1fr));
  /*poniendole un pequeño entre items*/
  gap:1vw;
}

/*GRID RESPONSIVE - CON AUTOFIT*/



/*GRID NESTED - GRID ANIDADA PONER UNA NUEVA MAQUETACION GRID DENTRO DE UN HIJO DE LA GRID PADRE**/

.grid-nested{
  display: grid;
  grid-template-columns: repeat(3,1fr);
  grid-template-rows: repeat(2,1fr);
}


/*GRID NESTED - GRID ANIDADA PONER UNA NUEVA MAQUETACION GRID DENTRO DE UN HIJO DE LA GRID PADRE**/




/*SUBGRID - UNA MANERA DIFERENTE DE COLOCAR UN GRID EN EL HIJO DE SU PADRE PERO NO SOPORTADA AUN*/
.grid{
  display: grid;
  grid-template-columns: repeat(3,1fr);
  grid-template-rows: repeat(4,1fr);
}

.subgrid {
  /* Para que la característica de subgrid funcione es necesario hacer los siguiente:
    1) Definir explícitamente el tamaño que ocupará el elemento que aplicará subgrid 
    dentro del contenedor padre grid, es decir definir sus propiedades grid-column y grid-row.
    2) Aplicar display grid al elemento que aplicará subgrid.
    3) Aplicar el valor de subgrid a las columnas, a las filas o ambas depende de cómo se requiera */
  grid-column: span 3;
  grid-row: 1 / 3;
  display: grid;
  grid-template-columns: subgrid; /*estas dos funciones no soportan en este navegador*/
  grid-template-rows: subgrid; /*estas dos funciones no soportan en este navegador*/
  /*asi que lo que hacemos es colocar los mismo valores de filas y columnas en la subgrid*/
  grid-template-columns: repeat(3,1fr);
  grid-template-rows: repeat(2,1fr);
}




















